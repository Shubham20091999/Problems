
def minimumBribes(q):
    global dict
    i=0
    do=False
    while i<len(q)-1:
        if(q[i]>q[i+1]):
            dict[q[i]-1]+=1
            if(dict[q[i]-1]>2):
                return "Too chaotic"
            (q[i],q[i+1])=(q[i+1],q[i])
            do=True
            continue
        i+=1
    
    if(do):
        minimumBribes(q)
    ans=0
    for i in range(len(dict)):
        ans+=dict[i]
    return ans

t = int(input())
for t_itr in range(t):
    n = int(input())
    q = list(map(int, input().rstrip().split()))
    dict=[0]*len(q)
    print(minimumBribes(q))

# q
# q=list(map(int,q.split()))
# dict=[0]*len(q)
# print(minimumBribes(q))